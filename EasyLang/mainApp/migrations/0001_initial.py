# Generated by Django 4.2.7 on 2023-11-16 21:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0014_remove_user_photo_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('tg_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=70)),
                ('project_description', models.CharField(max_length=500)),
                ('project_deadline', models.DateField()),
                ('total_pages_count', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('finished_at', models.DateField(blank=True)),
                ('project_manager_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Translator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.project')),
                ('translator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.translator')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.editor')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.project')),
            ],
        ),
        migrations.CreateModel(
            name='Pages_per_day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)])),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.project')),
                ('translator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.translator')),
            ],
        ),
        migrations.CreateModel(
            name='Disapprove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('editor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.editor')),
                ('pages_per_day_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.pages_per_day')),
            ],
        ),
        migrations.CreateModel(
            name='Approve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('editor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.editor')),
                ('pages_per_day_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.pages_per_day')),
            ],
        ),
    ]
